name: Scheduled Issue Triage

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: {}

jobs:
  triage-issues:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      issues: write
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Find untriaged issues
        id: find_issues
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          NO_LABEL_ISSUES=$(gh issue list --repo ${{ github.repository }} --search "is:open is:issue no:label" --json number,title,body)
          NEEDS_TRIAGE_ISSUES=$(gh issue list --repo ${{ github.repository }} --search "is:open is:issue label:\"status/needs-triage\"" --json number,title,body)
          ISSUES=$(echo "$NO_LABEL_ISSUES" "$NEEDS_TRIAGE_ISSUES" | jq -c -s 'add | unique_by(.number)')
          echo "issues_to_triage=$ISSUES" >> "$GITHUB_OUTPUT"

      - name: Run Gemini Issue Triage
        if: steps.find_issues.outputs.issues_to_triage != '[]'
        uses: google-gemini/gemini-cli-action@main
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ISSUES_TO_TRIAGE: ${{ steps.find_issues.outputs.issues_to_triage }}
          REPOSITORY: ${{ github.repository }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          OTLP_GCP_WIF_PROVIDER: ${{ secrets.OTLP_GCP_WIF_PROVIDER }}
          OTLP_GOOGLE_CLOUD_PROJECT: ${{ secrets.OTLP_GOOGLE_CLOUD_PROJECT }}
          settings_json: |
            {
              "coreTools": [
                "run_shell_command(gh label list)",
                "run_shell_command(gh issue edit)",
                "run_shell_command(gh issue list)"
              ],
              "telemetry": {
                "enabled": true,
                "target": "gcp"
              },
              "sandbox": false
            }
          prompt: |
            You are an issue triage assistant for GitHub issues.
            Your task is to analyze a batch of issues and apply appropriate labels from the repository's list of available labels.

            **IMPORTANT: Your only action should be to apply labels. Do not post any comments or modify any code.**

            **Triage Workflow:**

            1. **Fetch Available Labels:**
               Execute: `gh label list`

            2. **Get Issues to Triage:**
               The issues needing triage are available in the environment variable $ISSUES_TO_TRIAGE (JSON format)
               Repository: $REPOSITORY

            3. **Analyze and Apply Labels:**
               For each issue in the list, analyze its title and body, then apply appropriate labels using:
               `gh issue edit ISSUE_NUMBER --add-label "label1,label2"`

            **Guidelines:**
            - Only use labels that exist in the repository
            - Do not add comments to any issue
            - Triage each issue independently
            - Common label patterns: kind/bug, kind/enhancement, kind/documentation, area/*, priority/*
